name: Publish release

# Releases artifact from the build workflow

on:
  workflow_dispatch:
    inputs:
      version:
        description: Name of release (in the format of X.Y.Z and without 'v' prefix)
        required: true
      publish:
        type: boolean
        description: Would release be published
        required: true
        default: true
      draft:
        type: boolean
        description: Publish draft first
        required: true
        default: true

jobs:
  build: # FIXME: use matrix instead of a couple of steps. Requires a Dockerfile for the builder image with the dependencies
    name: Create artifacts from master
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Build WF
        run: PUBLIC_URL=gallery VITE_DATA_FOLDER=data ./build.sh
      - name: Upload WF
        uses: actions/upload-artifact@master
        with:
          name: build-wf
          path: "gallery.zip"
          if-no-files-found: error
      - name: Build NAC
        run: PUBLIC_URL=galleryNAC VITE_DATA_FOLDER=dataNAC ./build.sh
      - name: Upload NAC
        uses: actions/upload-artifact@master
        with:
          name: build-nac
          path: "galleryNAC.zip"
          if-no-files-found: error
      - name: Build NERC
        run: PUBLIC_URL=galleryNERC VITE_DATA_FOLDER=dataNERC ./build.sh
      - name: Upload NERC
        uses: actions/upload-artifact@master
        with:
          name: build-nerc
          path: "galleryNERC.zip"
          if-no-files-found: error
  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: build
      - name: Create release
        if: ${{ github.event.inputs.publish }}
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: "v${{ github.event.inputs.version }}"
          draft: ${{ github.event.inputs.draft }}
          files: |
            build/**/*.zip
